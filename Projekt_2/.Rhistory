qqline(q, distribution=qexp,col="blue", lty=2)
source('wooster.R')
wooster
winter = c(1:60, 305:365)
wooster.w = wooster
wooster.w$data =   wooster$data[c(winter, winter + 365,
winter + 365 * 2, winter + 365 *3, winter+365*4),]
wooster.w$data[,2]= - wooster.w$data[,2]
wooster.w$data <-
cbind(wooster.w$data,year.number=c(rep(1:5,rep(121,5))))
wooster.w.u.minus10.r.2<-
decluster(wooster.w$data[,"value"],threshold=-10,r=2,
groups=wooster.w$data[,"year.number"])
attributes(wooster.w.u.minus10.r.2) <- NULL
wooster.w.u.minus10.r.2  <-
as.in2extRemesDataObject(wooster.w.u.minus10.r.2)
wooster.w.u.minus20.r.2<-
decluster(wooster.w$data[,"value"],threshold=-20,r=2,
groups=wooster.w$data[,"year.number"])
attributes(wooster.w.u.minus20.r.2) <- NULL
wooster.w.u.minus20.r.2  <-
as.in2extRemesDataObject(wooster.w.u.minus20.r.2)
wooster.w.u.minus10.r.4<-
decluster(wooster.w$data[,"value"],threshold=-10,r=4,
groups=wooster.w$data[,"year.number"])
attributes(wooster.w.u.minus10.r.4) <- NULL
wooster.w.u.minus10.r.4 <-
as.in2extRemesDataObject(wooster.w.u.minus10.r.4)
wooster.w.u.minus20.r.4<-
decluster(wooster.w$data[,"value"],threshold=-20,r=4,
groups=wooster.w$data[,"year.number"])
attributes(wooster.w.u.minus20.r.4) <- NULL
wooster.w.u.minus20.r.4 <-
as.in2extRemesDataObject(wooster.w.u.minus20.r.4)
View(wooster)
View(wooster$data)
wooster.w.u.minus10.r.2
wooster.w.u.minus20.r.2
length(wooster.w.u.minus20.r.2)
# n_c
sum(wooster.w.u.minus20.r.2$data[,2]> -10)
# n_c
sum(wooster.w.u.minus10.r.2$data[,2]> -10)
sum(wooster.w.u.minus10.r.4$data[,2]> -10)
sum(wooster.w.u.minus20.r.2$data[,2]> -20)
wooster.w.u.minus20.r.2$data[,2]
# n_c
sum(wooster.w.u.minus10.r.2$data[,2]> -10)
# n_c
sum(wooster.w.u.minus10.r.2$data[,2]< -10)
sum(wooster.w.u.minus10.r.4$data[,2]< -10)
sum(wooster.w.u.minus20.r.2$data[,2]< -20)
# n_c
sum(wooster.w.u.minus10.r.2$data[,2]> -10)
sum(wooster.w.u.minus10.r.4$data[,2]> -10)
sum(wooster.w.u.minus20.r.2$data[,2]> -20)
sum(wooster.w.u.minus20.r.4$data[,2]> -20)
# n_c
n_c_1 = sum(wooster.w.u.minus10.r.2$data[,2]> -10)
n_c_2 = sum(wooster.w.u.minus10.r.4$data[,2]> -10)
n_c_3 = sum(wooster.w.u.minus20.r.2$data[,2]> -20)
n_c_4 = sum(wooster.w.u.minus20.r.4$data[,2]> -20)
u + sigma/gamma*((m*n_c_1/605)^gamma-1)
# Return level
u <- -10
gamma <- (wooster.w.u.minus10.r.2$models$fit1$results$par)[2]
sigma <- (wooster.w.u.minus10.r.2$models$fit1$results$par)[1]
m = 100*365
greek_u <- sum(data$data[,2] > 30)/length(data$data[,2])
u + sigma/gamma*((m*n_c_1/605)^gamma-1)
u <- -10
gamma <- (wooster.w.u.minus10.r.4$models$fit1$results$par)[2]
sigma <- (wooster.w.u.minus10.r.4$models$fit1$results$par)[1]
m = 100*365
greek_u <- sum(data$data[,2] > 30)/length(data$data[,2])
u + sigma/gamma*((m*n_c_2/605)^gamma-1)
extremalindex(x, threshold, method = c("intervals", "runs"), run.length = 1,
na.action = na.fail, ...)
wooster.w.u.minus20.r.4
extremalindex(wooster.w$data, -10, method = c("intervals", "runs"), run.length = 2)
extremalindex(wooster.w$data, -10, method = c("intervals", "runs"), run.length = 1)
# Extremal index
n_c_1/sum(wooster.w$data[,2]>-10)
n_c_2/sum(wooster.w$data[,2]>-10)
n_c_3/sum(wooster.w$data[,2]>-20)
n_c_4/sum(wooster.w$data[,2]>-20)
gamma
data$models$fit1
### 17.
fevd(x=value, data=data$data, threshold=30, type="Exponential")
### 19.
# Log likelihood test
2*(-485.0937 - (-487.3937))
qchisq(.95, df=1)
### 20.
# Kunligt QQ plot
Z <- sort(x)
p <- ppoints(100)    # 100 equally spaced points on (0,1), excluding endpoints
q <- quantile(Z,p=p) # percentiles of the sample distribution
plot(qexp(p) ,q, main="Exponential Q-Q Plot",
xlab="Theoretical Quantiles",ylab="Sample Quantiles")
qqline(q, distribution=qexp,col="blue", lty=2)
data$time <- factor(data$time, levels=c(1,2,3,4), labels=c("01-06","06-12","12-18", "18–24"))
with(data = data, plot(highpm10~time))
model <- glm(highpm10 ~ time, data=data, family="binomial")
summary(model)
setwd("~/projects/LinLog/Projekt_2")
# Load data and packages
library(pscl)
library(popbio)
library(plotly)
library(GGally)
library(ggplot2)
library(caret)
data <- read.delim("pm10.txt")
n <- nrow(data)
p_hat <- sum(data$highpm10)/n
# Confidence interval when approximating as normally distributed since np(1 − p) > 10
error <- qnorm(0.975)*sqrt(p_hat*(1-p_hat)/n)
CI_left <- p_hat - error
CI_right <- p_hat + error
data$time <- factor(data$time, levels=c(1,2,3,4), labels=c("01-06","06-12","12-18", "18–24"))
with(data = data, plot(highpm10~time))
model <- glm(highpm10 ~ time, data=data, family="binomial")
summary(model)
# Confidence intervals
confint(model) # log odds ratios (beta)
exp(confint(model)) # odds ratios exp(beta)
exp(confint(model)) # odds ratios exp(beta)
# Load data and packages
library(pscl)
library(popbio)
library(plotly)
library(GGally)
library(ggplot2)
library(caret)
data <- read.delim("pm10.txt")
n <- nrow(data)
p_hat <- sum(data$highpm10)/n
# Confidence interval when approximating as normally distributed since np(1 − p) > 10
error <- qnorm(0.975)*sqrt(p_hat*(1-p_hat)/n)
CI_left <- p_hat - error
CI_right <- p_hat + error
data$time <- factor(data$time, levels=c(1,2,3,4), labels=c("01-06","06-12","12-18", "18–24"))
with(data = data, plot(highpm10~time))
model <- glm(highpm10 ~ time, data=data, family="binomial")
summary(model)
# Confidence intervals
confint(model) # log odds ratios (beta)
exp(confint(model)) # odds ratios exp(beta)
summary(model)
with(data = data, plot(highpm10~time))
data$time <- factor(data$time, levels=c(1,2,3,4), labels=c("01-06","06-12","12-18", "18–24"))
with(data = data, plot(highpm10~time))
model <- glm(highpm10 ~ time, data=data, family="binomial")
# Load data and packages
library(pscl)
library(popbio)
library(plotly)
library(GGally)
library(ggplot2)
library(caret)
data <- read.delim("pm10.txt")
n <- nrow(data)
p_hat <- sum(data$highpm10)/n
# Confidence interval when approximating as normally distributed since np(1 − p) > 10
error <- qnorm(0.975)*sqrt(p_hat*(1-p_hat)/n)
CI_left <- p_hat - error
CI_right <- p_hat + error
data$time <- factor(data$time, levels=c(1,2,3,4), labels=c("01-06","06-12","12-18", "18–24"))
with(data = data, plot(highpm10~time))
model <- glm(highpm10 ~ time, data=data, family="binomial")
summary(model)
# Confidence intervals
confint(model) # log odds ratios (beta)
exp(confint(model)) # odds ratios exp(beta)
summary(model)
summary(model)$parameters
names(summary(model))
summary(model)$coefficients
summary(model)$coefficients$estimate
summary(model)$coefficients$Estimate
summary(model)$coefficients
summary(model)$coefficients[,1]
exp(summary(model)$coefficients[,1]) # Expected odds-ratios
exp(confint(model)) # odds ratios exp(beta)
# Prediction with standard errors
x0 <- data.frame(time=c('01-06','06-12','12-18','18–24'))
pred <- predict(model,x0, se.fit=T)
pred$fit # Betas
pred$se.fit # Standard error of betas
# Confidence interval for log-odds
ci.logodds <- cbind(lo = pred$fit-1.96*pred$se.fit, hi=pred$fit+1.96*pred$se.fit)
ci.logodds # Confidence interval for betas
# Expected probabilities
exp(pred$fit)/(1+exp(pred$fit))
# Confidence interval for probabilities:
exp(ci.logodds)/(1+exp(ci.logodds))
predict(model,x0, type = "response")
# Prediction with standard errors
x0 <- data.frame(cars=c(300, 3000))
pred.2 <- predict(model.2,x0, se.fit=T)
model.2 <- glm(highpm10 ~ cars, data=data, family="binomial")
# Prediction with standard errors
x0 <- data.frame(cars=c(300, 3000))
pred.2 <- predict(model.2,x0, se.fit=T)
# Confidence interval for log-odds
ci.logodds.2 <- cbind(est = pred.2$fit, lo = pred.2$fit-1.96*pred.2$se.fit, hi=pred.2$fit+1.96*pred.2$se.fit)
ci.logodds.2 # Confidence interval for betas
# Expected probabilities
exp(pred.2$fit)/(1+exp(pred.2$fit))
predict(model.2,x0, type = "response") # Alternative method
# Confidence interval for probabilities:
exp(ci.logodds.2)/(1+exp(ci.logodds.2))
par(mfrow=c(1,1))
# For "old" model
newdat <- data.frame(cars=seq(min(data$cars), max(data$cars),len=100))
newdat$prob = predict(model.2, newdata=newdat, type="response")
ksm <- ksmooth(data$cars, data$highpm10, bandwidth = 2000)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
lines(prob ~ cars, newdat, col="green4", lwd=2)
(1100/1000)^1.809066211
model.2.1 <- glm(highpm10 ~ log(cars), data=data, family="binomial")
# Odds ratio when log(cars) increases by one (write clearly in report)
or <- exp(model.2.1$coefficients)
ci.or <- exp(confint(model.2.1))
or
ci.or
model.2$coefficients[2]
model.2$coefficients[2]
model.2$coefficients
1.1^0.0004759191
# Increase with 100 cars
(or[2])^(100)-1 # Hundred cars increases the odds by 4.87 %
model.2 <- glm(highpm10 ~ cars, data=data, family="binomial")
or <- exp(model.2$coefficients)
ci.or <- exp(confint(model.2))
# Increase with 100 cars
(or[2])^(100)-1 # Hundred cars increases the odds by 4.87 %
or
exp(100*1.0004760)
model.2$coefficients
exp(100*0.0004759191)
# Increase with 100 cars
(or[2])^(100)-1 # Hundred cars increases the odds by 4.87 %
# Prediction with standard errors
x0 <- data.frame(cars=c(300, 3000))
pred.2.1 <- predict(model.2.1,x0, se.fit=T)
# Confidence interval for log-odds
ci.logodds.2 <- cbind(est = pred.2.1$fit, lo = pred.2.1$fit-1.96*pred.2.1$se.fit, hi=pred.2.1$fit+1.96*pred.2.1$se.fit)
ci.logodds.2 # Confidence interval for betas
# Confidence interval for log-odds
ci.logodds.2.1 <- cbind(est = pred.2.1$fit, lo = pred.2.1$fit-1.96*pred.2.1$se.fit, hi=pred.2.1$fit+1.96*pred.2.1$se.fit)
ci.logodds.2.1 # Confidence interval for betas
# Expected probabilities
exp(pred.2.1$fit)/(1+exp(pred.2.1$fit))
predict(model.2.1,x0, type = "response") # Alternative method
# Expected probabilities
exp(pred.2.1$fit)/(1+exp(pred.2.1$fit))
predict(model.2.1,x0, type = "response") # Alternative method
# Confidence interval for probabilities:
exp(ci.logodds.2.1)/(1+exp(ci.logodds.2.1))
summary(forwards)
data$winddirection <- factor(data$winddirection, levels=c(1,2,3,4), labels=c("NE","SE","SW", "NW"))
fullmodel <- glm(highpm10 ~ log(cars)+temp2m+windspeed+
winddirection+time+log(windspeed),
data=data, family="binomial")
summary(fullmodel) #Since log(windspeed) is significant this will be used instead of windspeed
fullmodel.2 <- glm(highpm10 ~ log(cars)+temp2m+
winddirection+time+log(windspeed),
data=data, family="binomial")
emptymodel <- glm(highpm10 ~ 1, data=data, family="binomial")
summary(emptymodel)
backwards = step(fullmodel.2,k = log(nrow(data)))
summary(backwards)
forwards = step(emptymodel,
scope=list(lower=formula(emptymodel),upper=formula(fullmodel.2)), direction="forward",
k=log(nrow(data)))
summary(forwards)
# Maybe winddirection can effect PM levels and interaction should be added?
par(mfrow=c(1,1))
plot(data$winddirection~data$highpm10)
winddir_model <- glm(highpm10 ~ log(cars)+winddirection*log(windspeed),
data=data, family="binomial")
summary(winddir_model) # Nope, windirection interaction didn't add enough.
temp_model <- glm(highpm10 ~ log(cars)+temp2m*log(windspeed),
data=data, family="binomial")
summary(temp_model) # Kind of good, lets check BIC
AIC(temp_model,k = log(nrow(data)))
AIC(forwards,k = log(nrow(data)))
temp_model <- glm(highpm10 ~ log(cars)+temp2m*log(windspeed),
data=data, family="binomial")
summary(temp_model) # Kind of good, lets check BIC
exp(-5.21546)
temp_model <- glm(highpm10 ~ log(cars)+temp2m*log(windspeed),
data=data, family="binomial")
summary(temp_model) # Kind of good, lets check BIC
AIC(temp_model,k = log(nrow(data)))
summary(temp_model) # Kind of good, lets check BIC
model.2$coefficients[2]
summary(model.2.1)
# Increase with 100 cars
(1100/1000)^model.2.1$coefficients[2] # Increase is 0.00454 %
pR2(temp_model)
pR2(forwards)
# For "old" model
newdat <- data.frame(cars=seq(min(data$cars), max(data$cars),len=100))
newdat$prob = predict(model.2, newdata=newdat, type="response")
ksm <- ksmooth(data$cars, data$highpm10, bandwidth = 2000)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
lines(prob ~ cars, newdat, col="blue", lwd=2)
data$temp2m
plot(data$temp2m)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$cars, data$highpm10, bandwidth = 2000)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
lines(prob ~ cars, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$cars, data$highpm10, bandwidth = 2000)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
lines(prob ~ cars, newdat_10_deg, col="blue", lwd=2)
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$cars, data$highpm10, bandwidth = 2000)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 2000)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 200)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Cars', ylab='Prob. high PM_10')
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10')
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(5,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10')
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-5,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10')
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(0,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10')
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim=0.4)
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10')
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = 0.4)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0,0.4))
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(15,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-15,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-0,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(1,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(2,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(3,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(5,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(6,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(10,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-5,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
AIC(temp_model,k = log(nrow(data)))
AIC(forwards,k = log(nrow(data)))
pR2(temp_model)
pR2(forwards)
plot(data$temp2m)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-5,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
plot(data$temp2m)
plot(data$temp2m)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-3,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
ksm <- ksmooth(data$windspeed, data$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-0,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
# Take an interval of data depending on the temperature
colder <- data[data$temp2m>-3]
# Take an interval of data depending on the temperature
colder <- data[where(data$temp2m>-3)]
where(data$temp2m >-3)
# Take an interval of data depending on the temperature
colder <- data[data$temp2m >-3,]
colder <- data[data$temp2m>3,]
ksm <- ksmooth(colder$windspeed, colder$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-3,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(-2,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(3,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
plot(data$cars~data$temp2m)
plot(log(data$cars)~data$temp2m)
corr(log(data$cars)~data$temp2m)
newdat_10_deg <- data.frame(cars=rep(mean(data$cars),len=100),temp2m=rep(3,len=100),
windspeed=seq(min(data$windspeed), max(data$windspeed),len=100))
newdat_10_deg$prob = predict(temp_model, newdata=newdat_10_deg, type="response")
# Take an interval of data depending on the temperature
colder <- data[data$temp2m >-3,]
colder <- data[data$temp2m>3,]
ksm <- ksmooth(colder$windspeed, colder$highpm10, bandwidth = 10)
plot(ksm$x, ksm$y, type = 'l', xlab='Windspeed', ylab='Prob. high PM_10', ylim = c(0.1,0.4))
lines(prob ~ windspeed, newdat_10_deg, col="blue", lwd=2)
summary(forwards)
winddir_model <- glm(highpm10 ~ log(cars)+winddirection*log(windspeed),
data=data, family="binomial")
summary(winddir_model) # Nope, windirection interaction didn't add enough.
AIC(winddir_model,k = log(nrow(data)))
winddir_model <- glm(highpm10 ~ log(cars)+log(windspeed),
data=data, family="binomial")
winddir_model <- glm(highpm10 ~ log(cars)+winddirection,
data=data, family="binomial")
summary(winddir_model)
