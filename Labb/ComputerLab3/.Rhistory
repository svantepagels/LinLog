summary(model2)[7]
# R-squared scores
summary(model2)[8]
summary(model)[8]
# R-squared scores
summary(model2)[8]/summary(model2)[9]
# R-squared scores
summary(model2)[8]/
summary(model2)[9]
# R-squared scores
summary(model2)[8]
summary(model2)[9]
summary(model)[9]
summary(model)[8]
summary(model)[9]
# R-squared scores
summary(model2)[8]
summary(model2)[9]
setwd("~/projects/LinLog/Labb/ComputerLab3")
cdi <- read.delim("CDI.txt")
cdi$region <- factor(cdi$region, levels=c(1,2,3,4),
labels=c("Northeast","Midwest","South","West"))
cdi$phys1000 <- 1000*cdi$phys/cdi$popul
cdi$crm1000 <- 1000*cdi$crimes/cdi$popul
# Plot phys1000 against each of percapitaincome, crm1000 and pop65plus. Also plot
# log(phys1000) against the others. Does is seem reasonable to take the log?
with(cdi, plot(phys1000 ~ percapitaincome,
xlab="Per Capita income", ylab="Physicians per 1000"))
with(cdi, plot(log(phys1000) ~ percapitaincome,
xlab="Per Capita income", ylab="Physicians per 1000"))
with(cdi, plot(phys1000 ~ crm1000,
xlab="Per Capita income", ylab="Physicians per 1000"))
with(cdi, plot(log(phys1000) ~ crm1000,
xlab="Per Capita income", ylab="Physicians per 1000"))
with(cdi, plot(phys1000 ~ pop65plus,
xlab="Per Capita income", ylab="Physicians per 1000"))
with(cdi, plot(log(phys1000) ~ pop65plus,
xlab="Per Capita income", ylab="Physicians per 1000"))
model.1 = lm(log(phys1000) ~ 1, data=cdi)
model.2 = lm(log(phys1000) ~ percapitaincome, data=cdi)
model.3 = lm(log(phys1000) ~ percapitaincome+crm1000, data=cdi)
model.4 = lm(log(phys1000) ~ percapitaincome+crm1000+pop65plus, data=cdi)
model.5 = lm(log(phys1000) ~ crm1000, data=cdi)
model.6 = lm(log(phys1000) ~ crm1000+pop65plus, data=cdi)
model.7 = lm(log(phys1000) ~ pop65plus, data=cdi)
model.8 = lm(log(phys1000) ~ pop65plus+percapitaincome, data=cdi)
# R-squared adjusted
r2adj = c(summary(model.1)$adj.r.squared,
summary(model.2)$adj.r.squared,
summary(model.3)$adj.r.squared,
summary(model.4)$adj.r.squared,
summary(model.5)$adj.r.squared,
summary(model.6)$adj.r.squared,
summary(model.7)$adj.r.squared,
summary(model.8)$adj.r.squared)
r2adj
# BIC
bic <- c(AIC(model.1,model.2,model.3, model.4, model.5,
model.6, model.7, model.8, k=log(nrow(cabbage)))$AIC)
# BIC
bic <- c(AIC(model.1,model.2,model.3, model.4, model.5,
model.6, model.7, model.8, k=log(nrow(phys1000)))$AIC)
nrow(cdi)
# BIC
bic <- c(AIC(model.1,model.2,model.3, model.4, model.5,
model.6, model.7, model.8, k=log(nrow(cdi))))
bic
crit.models <- data.frame(r2adj, bic)
crit.models
r2adj
plot(crit.models$r2adj)
help(plot)
plot(crit.models$r2adj, type='l')
plot(crit.models$bic, type='l')
plot(crit.models$r2adj, type='l')
plot(crit.models$bic, type='l')
crit.models
plot(crit.models$AIC, type='l')
plot(crit.models$r2adj, type='l')
plot(crit.models$AIC, type='l')
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC')
par(mfrow=c(2,1))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC')
par(mfrow=c(2,2))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC')
par(mfrow=c(2,1))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC')
help(par)
par(mfrow=c(1,1))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC')
par(mfrow=c(1,2))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='b')
par(mfrow=c(1,2))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
plot(crit.models$r2adj, type='l', col='red', main='R2 adj')
par(mfrow=c(1,2))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
crit.models <- data.frame(r2adj, bic)
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
par(1,1)
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
par(1,1)
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
plot(1)
par(1,1)
par(mfrow=c(1,1))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
par(mfrow=c(1,1))
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
v <- hatvalues(model.4) # leverage
plot(v)
help(hatvalues)
plot(v, xlab='i', ylab='Leverage', col='red')
plot(v, xlab='i', ylab='Leverage')
cdi[v>0.15]
cdi
v>0.15
v
find(v>0.15)
which(v>15)
v
min(which(v>15))
index(v>0.15)
which(v>0.15)
cdi[which(v>0.15)]
cdi[which(v>0.15),2]
cdi
cdi[which(v>0.15),2]
which(v>0.15)
which(v>0.15)[1]
cdi[which(v>0.15),2][1]
plot(v~percapitaincome, xlab='i', ylab='Leverage')
plot(v~cdi$percapitaincome, xlab='i', ylab='Leverage')
plot(v~cdi$crm1000, xlab='65 plus pop', ylab='Leverage')
plot(v~cdi$pop65plus, xlab='65 plus pop', ylab='Leverage')
plot(v~cdi$percapitaincome, xlab='Per capita income', ylab='Leverage')
plot(v~cdi$crm1000, xlab='Crime rate', ylab='Leverage')
plot(v~cdi$pop65plus, xlab='65 plus pop', ylab='Leverage')
plot(v~cdi$crm1000, xlab='Crime rate', ylab='Leverage')
r_stud <- rstudent(model.4) # studentised residuals
plot(r_stud, xlab='i', ylab='Studentised res')
plot(r_stud~cdi$percapitaincome, xlab='Per capita income', ylab='Studentised res')
plot(r_stud~cdi$crm1000, xlab='Crime rate', ylab='Studentised res')
plot(r_stud~cdi$pop65plus, xlab='65 plus pop', ylab='Studentised res')
r_stud <- rstudent(model.4) # studentised residuals
plot(r_stud, xlab='i', ylab='Studentised res')
plot(r_stud~model.4$fit, xlab='Fitted values', ylab='Studentised res')
r_stud <- rstudent(model.4) # studentised residuals
plot(r_stud, xlab='i', ylab='Studentised res')
plot(r_stud~cdi$percapitaincome, xlab='Per capita income', ylab='Studentised res')
plot(r_stud~cdi$crm1000, xlab='Crime rate', ylab='Studentised res')
plot(r_stud~cdi$pop65plus, xlab='65 plus pop', ylab='Studentised res')
plot(r_stud~model.4$fit, xlab='Fitted values', ylab='Studentised res')
r_stud <- rstudent(model.4) # studentised residuals
plot(r_stud, xlab='i', ylab='Studentised res')
plot(r_stud~cdi$percapitaincome, xlab='Per capita income', ylab='Studentised res')
plot(r_stud~cdi$crm1000, xlab='Crime rate', ylab='Studentised res')
plot(r_stud~cdi$pop65plus, xlab='65 plus pop', ylab='Studentised res')
plot(r_stud~model.4$fit, xlab='Fitted values', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud, xlab='i', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$percapitaincome, xlab='Per capita income', ylab='Studentised res')
plot(r_stud~cdi$crm1000, xlab='Crime rate', ylab='Studentised res')
plot(r_stud~cdi$pop65plus, xlab='65 plus pop', ylab='Studentised res')
plot(r_stud~model.4$fit, xlab='Fitted values', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud, xlab='i', ylab='Studentised res')
infl <- influence(model.4) # will calculate basic influence measures
plot(s_i)
s_i <- infl$sigma #a vector whose i-th element contains the estimate of the
plot(s_i)
infl
plot(infl)
abline(h=sum$sigma, col='red')
cdi[which(s_i<0.438),2]
cdi[which(s_i<0.438),2]
D <- cooks.distance(model.4)
plot(D)
points(Iout,D[Iout],col="red",pch=19)
cdi[which(D<0.8),2]
cdi[which(D>0.8),2]
abline(h=4/nrow(cdi))
abline(h=1)
plot(D)
abline(h=4/nrow(cdi), col='red')
abline(h=1, 'green')
abline(h=1, col='green')
count(which(D>0.8))
count(which(D>4/nrow(cdi)))
sum(which(D>4/nrow(cdi)))
sum(count(which(D>4/nrow(cdi))))
sum(count(which(D>4/nrow(cdi)))$freq)
dfb <- dfbetas(model.4)
plot(dfb[,1])
plot(dfb[,2])
plot(dfb[,3])
plot(dfb[,4])
plot(dfb[,5])
cdi[which(s_i<0.438),2]
which(s_i<0.438)
points(418,dfb[418,1],col="red",pch=19)
plot(dfb[,1]) # King's increase the intercept strongly
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="red",pch=19)
plot(dfb[,1]) # King's increase the intercept strongly
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,2])
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
dfb[6,2]
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,3]) # Kings's decrease crime rate strongly
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,4])
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
points(7,dfb[7,1],col="red",pch=19)
points(6,dfb[6,1],col="red",pch=19)
plot(dfb[,4])
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
dfb[6,4]
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
points(10,dfb[10,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
dfb <- dfbetas(model.4)
cdi <- read.delim("CDI.txt")
cdi$region <- factor(cdi$region, levels=c(1,2,3,4),
labels=c("Northeast","Midwest","South","West"))
cdi$phys1000 <- 1000*cdi$phys/cdi$popul
cdi$crm1000 <- 1000*cdi$crimes/cdi$popul
# Plot phys1000 against each of percapitaincome, crm1000 and pop65plus. Also plot
# log(phys1000) against the others. Does is seem reasonable to take the log?
with(cdi, plot(phys1000 ~ percapitaincome,
xlab="Per Capita income", ylab="Physicians per 1000"))
with(cdi, plot(log(phys1000) ~ percapitaincome,
xlab="Per Capita income", ylab="log Physicians per 1000"))
with(cdi, plot(phys1000 ~ crm1000,
xlab="Crime rate", ylab="Physicians per 1000"))
with(cdi, plot(log(phys1000) ~ crm1000,
xlab="Crime rate", ylab="log Physicians per 1000"))
with(cdi, plot(phys1000 ~ pop65plus,
xlab="65 plus pop", ylab="Physicians per 1000"))
with(cdi, plot(log(phys1000) ~ pop65plus,
xlab="65 plus pop", ylab="log Physicians per 1000"))
model.1 = lm(log(phys1000) ~ 1, data=cdi)
model.2 = lm(log(phys1000) ~ percapitaincome, data=cdi)
model.3 = lm(log(phys1000) ~ percapitaincome+crm1000, data=cdi)
model.4 = lm(log(phys1000) ~ percapitaincome+crm1000+pop65plus, data=cdi)
model.5 = lm(log(phys1000) ~ crm1000, data=cdi)
model.6 = lm(log(phys1000) ~ crm1000+pop65plus, data=cdi)
model.7 = lm(log(phys1000) ~ pop65plus, data=cdi)
model.8 = lm(log(phys1000) ~ pop65plus+percapitaincome, data=cdi)
# R-squared adjusted
r2adj = c(summary(model.1)$adj.r.squared,
summary(model.2)$adj.r.squared,
summary(model.3)$adj.r.squared,
summary(model.4)$adj.r.squared,
summary(model.5)$adj.r.squared,
summary(model.6)$adj.r.squared,
summary(model.7)$adj.r.squared,
summary(model.8)$adj.r.squared)
# BIC
bic <- c(AIC(model.1,model.2,model.3, model.4, model.5,
model.6, model.7, model.8, k=log(nrow(cdi))))
crit.models <- data.frame(r2adj, bic)
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
v <- hatvalues(model.4) # leverage
plot(v, xlab='i', ylab='Leverage')
plot(v~cdi$percapitaincome, xlab='Per capita income', ylab='Leverage')
plot(v~cdi$crm1000, xlab='Crime rate', ylab='Leverage')
plot(v~cdi$pop65plus, xlab='65 plus pop', ylab='Leverage')
cdi[which(v>0.15),2]
r_stud <- rstudent(model.4) # studentised residuals
plot(r_stud, xlab='i', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$percapitaincome, xlab='Per capita income', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$crm1000, xlab='Crime rate', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$pop65plus, xlab='65 plus pop', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~model.4$fit, xlab='Fitted values', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
infl <- influence(model.4) # will calculate basic influence measures
s_i <- infl$sigma #a vector whose i-th element contains the estimate of the
plot(s_i)
cdi[which(s_i<0.438),2]
D <- cooks.distance(model.4)
plot(D)
abline(h=4/nrow(cdi), col='red')
abline(h=1, col='green')
cdi[which(D>0.8),2] # The sucker King's county is there again, Olmsted seems cool.
sum(count(which(D>4/nrow(cdi)))$freq) # 27 little try-hards have Cook's distance above 4/n
dfb <- dfbetas(model.4)
plot(dfb[,1]) # King's increase the intercept strongly
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,2])
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,3]) # Kings's decrease crime rate strongly
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,4])
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
dfb[6,1]
plot(dfb[,1]) # King's increase the intercept strongly
points(6,dfb[6,1],col="red",pch=19)
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,3]) # Kings's decrease crime rate strongly
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,4])
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,1]) # King's increase the intercept strongly
points(6,dfb[6,1],col="red",pch=19)
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,2])
points(6,dfb[6,2],col="red",pch=19)
points(418,dfb[418,2],col="green",pch=19)
plot(dfb[,3]) # Kings's decrease crime rate strongly
points(6,dfb[6,3],col="red",pch=19)
points(418,dfb[418,3],col="green",pch=19)
plot(dfb[,4])
points(6,dfb[6,4],col="red",pch=19)
points(418,dfb[418,4],col="green",pch=19)
library(dplyr)
cdi %>% select(-county)
cdi <- cdi %>%
filter(id != 6)
cdi
apa <- cdi %>% filter(county = Cook, Orange, Dade) %>%
select(id, county, phys) %>%
mutate(Svante = phys + 1311)
apa <- cdi %>% filter(county == Cook, Orange, Dade) %>%
select(id, county, phys) %>%
mutate(Svante = phys + 1311)
apa <- cdi %>% filter(county %in% c("Cook", "Orange", "Dade")) %>%
select(id, county, phys) %>%
mutate(Svante = phys + 1311)
View(apa)
model.4 = lm(log(phys1000) ~ percapitaincome+crm1000+pop65plus, data=cdi)
# R-squared adjusted
r2adj = c(summary(model.4)$adj.r.squared)
# BIC
bic <- c(AIC(model.4, k=log(nrow(cdi))))
crit.models <- data.frame(r2adj, bic)
plot(crit.models$r2adj, type='p', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='p', xlab='Model', ylab='BIC', col='blue')
v <- hatvalues(model.4) # leverage
plot(v, xlab='i', ylab='Leverage')
plot(v~cdi$percapitaincome, xlab='Per capita income', ylab='Leverage')
plot(v~cdi$crm1000, xlab='Crime rate', ylab='Leverage')
plot(v~cdi$pop65plus, xlab='65 plus pop', ylab='Leverage')
cdi[which(v>0.15),2]
r_stud <- rstudent(model.4) # studentised residuals
plot(r_stud, xlab='i', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$percapitaincome, xlab='Per capita income', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$crm1000, xlab='Crime rate', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$pop65plus, xlab='65 plus pop', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~model.4$fit, xlab='Fitted values', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
infl <- influence(model.4) # will calculate basic influence measures
s_i <- infl$sigma #a vector whose i-th element contains the estimate of the
plot(s_i)
cdi[which(s_i<0.438),2]
D <- cooks.distance(model.4)
plot(D)
abline(h=4/nrow(cdi), col='red')
abline(h=1, col='green')
cdi[which(D>0.8),2] # The sucker King's county is there again, Olmsted seems cool.
sum(count(which(D>4/nrow(cdi)))$freq) # 27 little try-hards have Cook's distance above 4/n
dfb <- dfbetas(model.4)
plot(dfb[,1]) # King's increase the intercept strongly
points(6,dfb[6,1],col="red",pch=19)
plot(dfb[,1]) # King's increase the intercept strongly
points(418,dfb[418,1],col="green",pch=19)
plot(dfb[,2])
plot(dfb[,2])
points(418,dfb[418,2],col="green",pch=19)
plot(dfb[,3]) # Kings's decrease crime rate strongly
points(6,dfb[6,3],col="red",pch=19)
plot(dfb[,3]) # Kings's decrease crime rate strongly
points(418,dfb[418,3],col="green",pch=19)
plot(dfb[,4])
points(6,dfb[6,4],col="red",pch=19)
points(418,dfb[418,4],col="green",pch=19)
plot(dfb[,4])
points(418,dfb[418,4],col="green",pch=19)
r_stud <- rstudent(model.4) # studentised residuals
plot(r_stud, xlab='i', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$percapitaincome, xlab='Per capita income', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$crm1000, xlab='Crime rate', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~cdi$pop65plus, xlab='65 plus pop', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
plot(r_stud~model.4$fit, xlab='Fitted values', ylab='Studentised res')
abline(h=0)
abline(h=c(-2,2),col="red")
infl <- influence(model.4) # will calculate basic influence measures
s_i <- infl$sigma #a vector whose i-th element contains the estimate of the
plot(s_i)
points(418,dfb[418,2],col="green",pch=19)
cdi[which(s_i<0.438),2]
points(418,dfb[418,2],col="green",pch=19)
points(418,s_i[418,2],col="green",pch=19)
plot(s_i)
points(417,s_i[417,2],col="green",pch=19)
points(417,s_i[417],col="green",pch=19)
D <- cooks.distance(model.4)
plot(D)
abline(h=4/nrow(cdi), col='red')
abline(h=1, col='green')
cdi[which(D>0.8),2] # The sucker King's county is there again, Olmsted seems cool.
sum(count(which(D>4/nrow(cdi)))$freq) # 27 little try-hards have Cook's distance above 4/n
cdi[which(D>0.8),2] # The sucker King's county is there again, Olmsted seems cool.
sum(count(which(D>4/nrow(cdi)))$freq) # 27 little try-hards have Cook's distance above 4/n
which(D>4/nrow(cdi)
)
count(which(D>4/nrow(cdi))
)
dim(which(D>4/nrow(cdi)))
length(which(D>4/nrow(cdi)))
length(which(D>4/nrow(cdi))) # 27 little try-hards have Cook's distance above 4/n
# R-squared adjusted
r2adj = c(summary(model.4)$adj.r.squared)
# BIC
bic <- c(AIC(model.4, k=log(nrow(cdi))))
crit.models <- data.frame(r2adj, bic)
plot(crit.models$r2adj, type='p', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='p', xlab='Model', ylab='BIC', col='blue')
bic
r2adj
cdi <- read.delim("CDI.txt")
cdi$region <- factor(cdi$region, levels=c(1,2,3,4),
labels=c("Northeast","Midwest","South","West"))
cdi$phys1000 <- 1000*cdi$phys/cdi$popul
cdi$crm1000 <- 1000*cdi$crimes/cdi$popul
model.1 = lm(log(phys1000) ~ 1, data=cdi)
model.2 = lm(log(phys1000) ~ percapitaincome, data=cdi)
model.3 = lm(log(phys1000) ~ percapitaincome+crm1000, data=cdi)
model.4 = lm(log(phys1000) ~ percapitaincome+crm1000+pop65plus, data=cdi)
model.5 = lm(log(phys1000) ~ crm1000, data=cdi)
model.6 = lm(log(phys1000) ~ crm1000+pop65plus, data=cdi)
model.7 = lm(log(phys1000) ~ pop65plus, data=cdi)
model.8 = lm(log(phys1000) ~ pop65plus+percapitaincome, data=cdi)
# R-squared adjusted
r2adj = c(summary(model.1)$adj.r.squared,
summary(model.2)$adj.r.squared,
summary(model.3)$adj.r.squared,
summary(model.4)$adj.r.squared,
summary(model.5)$adj.r.squared,
summary(model.6)$adj.r.squared,
summary(model.7)$adj.r.squared,
summary(model.8)$adj.r.squared)
# BIC
bic <- c(AIC(model.1,model.2,model.3, model.4, model.5,
model.6, model.7, model.8, k=log(nrow(cdi))))
crit.models <- data.frame(r2adj, bic)
plot(crit.models$r2adj, type='l', xlab='Model', ylab='R2 adj', col='red')
plot(crit.models$AIC, type='l', xlab='Model', ylab='BIC', col='blue')
